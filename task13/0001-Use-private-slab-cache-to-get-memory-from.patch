From 515945af1e71cb4c846670390a24165e5a8125d8 Mon Sep 17 00:00:00 2001
From: Sergio Paracuellos <sergio.paracuellos@gmail.com>
Date: Fri, 23 Sep 2016 20:21:41 +0200
Subject: [PATCH] Use private slab cache to get memory from

Signed-off-by: Sergio Paracuellos <sergio.paracuellos@gmail.com>
---
 task12.c | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/task12.c b/task12.c
index 91bb054..124ee6e 100644
--- a/task12.c
+++ b/task12.c
@@ -17,6 +17,8 @@ struct identity {
 
 static LIST_HEAD(identity_list);
 
+static struct kmem_cache *identity_cache;
+
 /* Prototypes */
 static int identity_create(char *name, int id);
 static struct identity *identity_find(int id);
@@ -29,7 +31,7 @@ static int identity_create(char *name, int id)
 	if (identity_find(id))
 		return -EINVAL;
 
-	new = kmalloc(sizeof(*new), GFP_KERNEL);
+	new = kmem_cache_alloc(identity_cache, GFP_KERNEL);
 	if (!new)
 		return -ENOMEM;
 
@@ -67,13 +69,20 @@ static void identity_destroy(int id)
 	pr_debug("destroying identity %d: %s\n", tmp->id, tmp->name);
 
 	list_del(&(tmp->list));
-	kfree(tmp);
+	kmem_cache_free(identity_cache, tmp);
 }
 
 static int __init task12_init(void)
 {
 	struct identity *tmp;
 
+	identity_cache = kmem_cache_create("identity",
+					   sizeof(struct identity),
+					   0, 0, NULL);
+
+	if (!identity_cache)
+		return -ENOMEM;
+
 	if (identity_create("Alice", 1))
 		pr_debug("error creating Alice\n");
 	if (identity_create("Bob", 2))
@@ -101,6 +110,9 @@ static int __init task12_init(void)
 
 static void __exit task12_exit(void)
 {
+	if (identity_cache)
+		kmem_cache_destroy(identity_cache);
+
 	pr_debug("Eudyptula task12: exiting...\n");
 }
 
-- 
1.9.1

